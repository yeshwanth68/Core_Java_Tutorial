Interface
=========
In Java, an interface is a reference type that is used to define a contract for classes. 
It can contain abstract methods (methods without a body) that must be implemented by any class that chooses to implement the interface. 
Java 8 introduced default and static methods in interfaces, which can have method bodies. 
Interfaces are used to achieve abstraction and multiple inheritance in Java.

Key Points about Interfaces:
----------------------------
1.Abstract Methods: Interfaces typically declare abstract methods, which do not have a body. These must be implemented by any class that implements the interface.
2.Multiple Inheritance: A class can implement multiple interfaces, which is Java's way of achieving multiple inheritance.
3.No Constructors: Interfaces cannot have constructors, and thus cannot be instantiated directly.
4.Default and Static Methods: Since Java 8, interfaces can have default methods and static methods with implementations.
5.All Fields are public, static, and final: Fields declared in an interface are implicitly public, static, and final.
6.Public Methods: All methods in an interface are public by default, and itâ€™s not required to explicitly declare them as public.